{"version":3,"sources":["App.module.css","Component/Todo/Todo.js","firebase.js","App.js","index.js"],"names":["module","exports","Todo","props","List","ListItem","ListItemText","primary","text","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todos","setTodos","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","todo","className","classes","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","variant","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","type","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,IAAM,mB,yLCWTC,MAVf,SAAcC,GACZ,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,QAASJ,EAAMK,Y,yBCStBC,EAXKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAEMC,YC6CRC,MApDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAsBb,OAlBAC,qBAAU,WAERjB,EAAGkB,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXP,EAASO,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,OAAOC,eAcnD,sBAAKC,UAAWC,IAAQjB,IAAxB,UACE,yDACA,iCACE,eAACkB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,qCACA,cAACC,EAAA,EAAD,CACEC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAWlB,EAASkB,EAAMC,OAAOH,aAG/C,cAACI,EAAA,EAAD,CACEC,UAAWtB,EACXuB,QAAQ,YACRC,QAxBQ,SAACL,GACfA,EAAMM,iBACN1B,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KAEpBf,EAAGkB,WAAW,SAASuB,IAAI,CACzBf,KAAMX,EACN2B,UAAWzC,IAASS,UAAUiC,WAAWC,oBAE3C5B,EAAS,KAiBH6B,KAAK,SACLC,MAAM,UALR,yBAUF,6BACGjC,EAAMU,KAAI,SAACG,GAAD,OACT,cAAC,EAAD,CAAM3B,KAAM2B,aC/CtBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.78796e37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__RFF6u\"};","import React from 'react';\r\nimport { ListItemText, List, ListItem } from '@material-ui/core';\r\nfunction Todo(props) {\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <ListItemText primary={props.text} />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","//// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDw0XXXzVzHUouojksFgPhV54hai1jI4tg',\r\n  authDomain: 'todo-app-9f35a.firebaseapp.com',\r\n  projectId: 'todo-app-9f35a',\r\n  storageBucket: 'todo-app-9f35a.appspot.com',\r\n  messagingSenderId: '1025140927732',\r\n  appId: '1:1025140927732:web:d17a3b7ba524b3e9fe42a1',\r\n  measurementId: 'G-THJ1G1V5L0',\r\n});\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { useState, useEffect } from 'react';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport Todo from './Component/Todo/Todo';\nimport classes from './App.module.css';\nimport db from './firebase';\nimport firebase from 'firebase';\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n  // when the app loads,we need to listen to the database and fetch new information\n  useEffect(() => {\n    // this code here .. fires when the app.js loads\n    db.collection('todos')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => {\n        setTodos(snapshot.docs.map((doc) => doc.data().todo));\n      });\n  });\n  const addTodo = (event) => {\n    event.preventDefault(); // prevent the form refresh the web\n    setTodos([...todos, input]);\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(''); // clear the input into blank section\n  };\n  return (\n    <div className={classes.App}>\n      <h1> Hello this is todo app</h1>\n      <form>\n        <FormControl>\n          <InputLabel>Write your todo things</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </FormControl>\n        <Button\n          disabled={!input}\n          variant='contained'\n          onClick={addTodo}\n          type='submit'\n          color='primary'>\n          Add todo\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map((todo) => (\n          <Todo text={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}